name: Reproducible Building Check

on:
  create:
    tags:
      - '*'

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Setup the repo tool
      run: |
        mkdir ~/bin
        echo "~/bin" >> $GITHUB_PATH
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        gpg --recv-key 8BB9AD793E8E6153AF0F9A4416530D5E920F5C65
        ##curl https://storage.googleapis.com/git-repo-downloads/repo.asc | gpg --verify - ~/bin/repo
        git config --global user.name "grapheneos-kernel-build"
        git config --global user.email "noreply@grapheneos.org"
        git config --global color.ui false

    - name: Sync minimal sources to build the kernel
      working-directory: ${{github.workspace}}
      run: |
        mkdir kernel-build-standalone
        cd kernel-build-standalone
        repo init -u https://github.com/flawedworld/platform_manifest.git --depth=1 -b 11 ## Can add logic here to change based on tag
        repo sync -j32 
      
    - name: Compile the kernel
      working-directory: ${{github.workspace}}/kernel-build-standalone
      run: |
        mkdir -p device/google/redfin-kernel
        cd kernel/google/redbull
        git submodule sync
        git submodule update --init --recursive
        ./build.sh redfin

    - name: Generate SHA256 hashes of files and upload them
      id: get_sha256
      working-directory: ${{github.workspace}}/kernel-build-standalone/kernel/google/redbull
      run: |
        echo "::set-output name=SHA256SUM1::$(sha256sum out/arch/arm64/boot/dtbo.img | awk '{ print $1 }')"
        echo "::set-output name=SHA256SUM2::$(sha256sum out/arch/arm64/boot/Image.lz4 | awk '{ print $1 }')"
        echo "::set-output name=SHA256SUM3::$(sha256sum out/arch/arm64/boot/dts/google/qcom-base/lito.dtb | awk '{ print $1 }')"
       
    - name: Get the tag which has been built
      id: get_tag
      run: echo ::set-output name=TAGNAME::${GITHUB_REF/refs\/tags\//}
      
    - name: Publish SHA256 hashes
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_tag.outputs.TAGNAME }}
        release_name: ${{ steps.get_tag.outputs.TAGNAME }}
        body: |
          SHA256 checksums for outputs are as follows:
          out/arch/arm64/boot/dtbo.img = ${{ steps.get_sha256.outputs.SHA256SUM1 }}
          out/arch/arm64/boot/Image.lz4 = ${{ steps.get_sha256.outputs.SHA256SUM2 }}
          out/arch/arm64/boot/dts/google/qcom-base/lito.dtb = ${{ steps.get_sha256.outputs.SHA256SUM3 }}
        draft: false
        prerelease: false
